import l from "../../../store/useStore.js";
import { s as D } from "../../../shallow-27fd7e97.js";
import { useEffect as x } from "react";
import { round as n } from "../../../utils/formatNumber.js";
import { u as p } from "../../../react-hotkeys-hook.esm-60f1c3b8.js";
import { u as A } from "../../../QueryClientProvider-103c6f38.js";
import "../../../_commonjsHelpers-10dfc225.js";
import "../../../index-9d43cc8b.js";
import "../../../store/createTokenSearchSlice.js";
import "../../../immer-548168ec.js";
import "../../../store/createWalletSlice.js";
import "../../../store/createSwapSettingsSlice.js";
import "../../../store/createGlobalSettingsSlice.js";
import "../../../store/createUserOrdersSlice.js";
import "../../../store/createSwapSlice.js";
import "../../../store/createChartSlice.js";
import "../../../store/createBasketSlice.js";
import "../tokens.js";
import "../../../store/createModalWhatsNewSlice.js";
import "../../../store/createSwapParamsSlice.js";
import "react/jsx-runtime";
const G = () => {
  const a = A(), { flipTokens: r } = l(
    (e) => ({
      flipTokens: e.swapSlice.flipTokens,
      sellAmount: e.swapSlice.sellAmount,
      buyAmount: e.swapSlice.buyAmount,
      tokenSell: e.swapSlice.tokenSell,
      tokenBuy: e.swapSlice.tokenBuy,
      dexBlacklist: e.swapSlice.dexBlacklist,
      inputMode: e.swapSlice.inputMode
    }),
    D
  ), {
    slippage: s,
    setisDexSplitting: S,
    setLocalRouting: m,
    setSlippage: i,
    setIsCustomSlippage: c,
    isOpenSwapSetting: g,
    setIsOpenSwapSetting: u,
    setIsAutomaticSlippage: w,
    isCustomSlippage: f
  } = l((e) => e.swapSettingsSlice), k = () => {
    a.invalidateQueries({
      predicate: (e) => e.queryKey[0] === "swapDetails"
    }), r();
  }, d = () => {
    u(!g);
  };
  x(() => {
    const e = localStorage.getItem("swapSettings");
    if (e) {
      const t = JSON.parse(e);
      S(t.isDexSplitting), m(t.localRouting), i(t.slippage), c(t.isCustomSlippage), w(t.isAutomaticSlippage);
    } else
      i(2);
  }, []);
  const o = (e) => {
    const t = {
      slippage: s,
      isCustomSlippage: f,
      ...e
    };
    localStorage.setItem("swapSettings", JSON.stringify(t));
  }, y = () => {
    const e = n(Math.min(s + 1, 500), 1);
    i(e), o({ slippage: e });
  }, h = () => {
    const e = n(Math.max(s - 1, 1), 1);
    i(e), o({ slippage: e });
  };
  p("s", d), p("k", (e) => {
    e.preventDefault(), k();
  }), p("e", (e) => {
    e.preventDefault(), y();
  }), p("q", (e) => {
    e.preventDefault(), h();
  });
};
export {
  G as useSwapShortcuts
};

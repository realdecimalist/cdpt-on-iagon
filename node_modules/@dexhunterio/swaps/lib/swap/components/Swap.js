import { jsxs as m, jsx as r } from "react/jsx-runtime";
import s from "../../store/useStore.js";
import { memo as L, useEffect as k } from "react";
import v from "./Details/SwapDetails.js";
import y from "./SwapConfim.js";
import { s as P } from "../../shallow-27fd7e97.js";
import { useEstimateSwap as E } from "../hooks/useSwapEstimation.js";
import { cn as F } from "../../lib/utils.js";
import I from "./Settings/SwapSettings.js";
import K from "./Main/SwapHeader.js";
import W from "./Main/SwapSelect.js";
import { useSwapShortcuts as M } from "./Main/useSwapShortcuts.js";
import { CARDANO_TOKEN as f, DEFAULT_TOKEN as C, DEFAULT_TOKEN_LIST as Q } from "./tokens.js";
import { useEstimateLimit as j } from "../hooks/useLimitEstimation.js";
import { useEstimateStopLoss as H } from "../hooks/useStopLossEstimation.js";
import { u as e } from "../../useQuery-714c7c61.js";
import "../../_commonjsHelpers-10dfc225.js";
import "../../index-9d43cc8b.js";
import "../../store/createTokenSearchSlice.js";
import "../../immer-548168ec.js";
import "../../store/createWalletSlice.js";
import "../../store/createSwapSettingsSlice.js";
import "../../store/createGlobalSettingsSlice.js";
import "../../store/createUserOrdersSlice.js";
import "../../store/createSwapSlice.js";
import "../../store/createChartSlice.js";
import "../../store/createBasketSlice.js";
import "../../store/createModalWhatsNewSlice.js";
import "../../store/createSwapParamsSlice.js";
import "../../components/ui/skeleton.js";
import "../../lib.js";
import "../../extend-tailwind-merge-e63b2b56.js";
import "../../constants/dexes.js";
import "../../react-hotkeys-hook.esm-60f1c3b8.js";
import "./Details/SwapDetailSplit.js";
import "./Details/OrderPreview.js";
import "../../components/ui/progress.js";
import "../../index-1c873780.js";
import "../../index-563d1ed8.js";
import "../../index-c8f2666b.js";
import "../../utils/formatNumber.js";
import "../../components/ui/tooltipDialog.js";
import "../../hooks/useScreen.js";
import "../../components/ui/dialog.js";
import "../../index-840f2930.js";
import "../../index-c7156e07.js";
import "../../index-4914f99c.js";
import "../../index-67500cd3.js";
import "../../index-27cadef5.js";
import "../../index-5116e957.js";
import "../../components/ui/tooltip.js";
import "../../index-0ce202b9.js";
import "../../index-bcfeaad9.js";
import "../../index-f7426637.js";
import "../../assets/svg/IconSquareInfo.js";
import "../../x-9e07c78a.js";
import "../../createLucideIcon-7a477fa6.js";
import "./Details/SwapDetailOutput.js";
import "../../components/common/TokenPrice.js";
import "../../utils/formatToken.js";
import "../../trends/components/PriceFormatter.js";
import "../../assets/svg/IconX.js";
import "../../assets/svg/IconDown.js";
import "../../components/common/RealtimePulse.js";
import "../../components/ui/separator.js";
import "../../components/ui/button.js";
import "../../index-1d6812f7.js";
import "../hooks/useSwapAction.js";
import "../../config/axios.js";
import "../../index-ca8eb9e1.js";
import "../../axios-ddd885c5.js";
import "../../config/decrypt.js";
import "../../hooks/useNotify.js";
import "../../react-toastify.esm-a636d9b1.js";
import "../../assets/svg/IconCopy.js";
import "../../assets/svg/IconCheckNotify.js";
import "../../assets/svg/IconAlertTriangleNotify.js";
import "../../assets/svg/IconArrowUpRightNotify.js";
import "../hooks/useLimitAction.js";
import "../hooks/useStopLossAction.js";
import "../../assets/svg/IconSquaredSpinner.js";
import "../hooks/useDCAAction.js";
import "../../assets/svg/IconSetting.js";
import "../../components/ui/input.js";
import "../../components/ui/switchWithText.js";
import "../../assets/svg/IconRemove.js";
import "./Settings/Slippage.js";
import "../../assets/svg/IconRefresh.js";
import "../../QueryClientProvider-103c6f38.js";
import "./TokenSell.js";
import "../../assets/svg/IconChevronDown.js";
import "../../components/common/TokenImage.js";
import "../../utils/cardanoUtils.js";
import "../../hooks/useInputShortcuts.js";
import "../hooks/useUsdPrices.js";
import "../../index.esm-fb2f5862.js";
import "../../IconTilde-bf643edd.js";
import "../../createReactComponent-ec43b511.js";
import "../../assets/svg/IconArrowDown.js";
import "./TokenBuy.js";
import "./TokenLimit.js";
import "../../components/ui/slider.js";
import "../../index-1fe761a6.js";
import "../../index-6460524a.js";
import "../../index-bf605d8a.js";
import "./TokenDCA.js";
import "../../orders/components/Filters/DCAInterval.js";
import "../../components/ui/dropdown-menu.js";
import "../../assets/svg/IconCheck.js";
import "../../notifyManager-b5b16d35.js";
const R = () => {
  M();
  const { estimateSwap: S, estimatePrice: x } = E(), { estimateLimit: g } = j(), { estimateStopLoss: T } = H(), {
    sellAmount: d,
    tokenBuy: t,
    tokenSell: o,
    buyAmount: a,
    dexBlacklist: n,
    inputMode: _,
    setTokenSell: c,
    setTokenBuy: l,
    orderType: p,
    limitPrice: b
  } = s(
    (i) => ({
      flipTokens: i.swapSlice.flipTokens,
      sellAmount: i.swapSlice.sellAmount,
      buyAmount: i.swapSlice.buyAmount,
      tokenSell: i.swapSlice.tokenSell,
      tokenBuy: i.swapSlice.tokenBuy,
      dexBlacklist: i.swapSlice.dexBlacklist,
      inputMode: i.swapSlice.inputMode,
      setTokenSell: i.swapSlice.setTokenSell,
      setTokenBuy: i.swapSlice.setTokenBuy,
      orderType: i.swapSlice.orderType,
      limitPrice: i.swapSlice.limitPrice,
      isSwapSubmitted: i.swapSlice.isSwapSubmitted
    }),
    P
  ), { slippage: A, isOpenSwapSetting: h, isOpenSwapOverview: N } = s(
    (i) => i.swapSettingsSlice
  ), { defaultBuySize: u } = s((i) => i.globalSettingsSlice), O = [
    "swapDetails",
    o == null ? void 0 : o.token_id,
    t == null ? void 0 : t.token_id,
    d,
    a,
    u,
    n,
    _,
    A,
    p
  ];
  e(O, ({ signal: i }) => S({ signal: i }), {
    cacheTime: 0,
    refetchOnWindowFocus: !0,
    refetchInterval: 5e3,
    // Polling every 5s
    enabled: p === "SWAP" || p === "DCA"
  });
  const w = [
    "limitDetails",
    o == null ? void 0 : o.token_id,
    t == null ? void 0 : t.token_id,
    d,
    a,
    u,
    n,
    b,
    p
  ];
  e(w, ({ signal: i }) => g({ signal: i }), {
    cacheTime: 0,
    refetchOnWindowFocus: !0,
    // refetchInterval: 5000, // Polling every 5s
    enabled: p === "LIMIT"
  }), e(w, ({ signal: i }) => T({ signal: i }), {
    cacheTime: 0,
    refetchOnWindowFocus: !0,
    // refetchInterval: 5000, // Polling every 5s
    enabled: p === "STOP_LOSS"
  });
  const D = [
    "swapPrice",
    o == null ? void 0 : o.token_id,
    t == null ? void 0 : t.token_id
  ];
  return e(D, ({ signal: i }) => x({ signal: i }), {
    cacheTime: 0,
    refetchOnWindowFocus: !0,
    // refetchInterval: 5000, // Polling every 5s
    refetchIntervalInBackground: !0
  }), k(() => {
    (o == null ? void 0 : o.token_id) === "" && (t == null ? void 0 : t.token_id) === "" && (c(f), l(C)), (o == null ? void 0 : o.token_id) === (t == null ? void 0 : t.token_id) && (c(f), l(
      Q[t == null ? void 0 : t.token_id] || t
    ));
  }, [o, t]), /* @__PURE__ */ m("div", { className: "", children: [
    !h && /* @__PURE__ */ m("div", { className: "dhs-bg-background dhs-flex dhs-flex-col dhs-gap-1 @sm/appRoot:dhs-gap-2.5 dhs-p-2.5 dhs-pt-0 dhs-rounded-[26px]", children: [
      /* @__PURE__ */ m("div", { className: F(N && "dhs-hidden"), children: [
        /* @__PURE__ */ r(K, {}),
        /* @__PURE__ */ r(W, {})
      ] }),
      p === "SWAP" && /* @__PURE__ */ r(v, {}),
      /* @__PURE__ */ r(y, {}),
      /* @__PURE__ */ m(
        "div",
        {
          className: "dhs-text-mainText dhs-font-proximaMedium dhs-md:pr-[60px] dhs-lg:pr-[60px] dhs-gap-2 dhs-flex dhs-w-full dhs-justify-center dhs-flex dhs-cursor-pointer dhs-items-center",
          onClick: () => window.open("https://app.dexhunter.io"),
          children: [
            /* @__PURE__ */ r("span", { className: "dhs-leading-none", children: "Powered by" }),
            /* @__PURE__ */ m("div", { className: "dhs-mr-3 dhs-sm:ml-0 dhs-flex dhs-items-center dhs-flex", children: [
              /* @__PURE__ */ r(
                "img",
                {
                  src: "https://storage.googleapis.com/dexhunter-images/public/hunt-token.svg",
                  className: "dhs-h-[25px] dhs-w-[25px] dhs-mr-1",
                  width: 25,
                  height: 25,
                  alt: "DexHunter Logo"
                }
              ),
              /* @__PURE__ */ r("span", { className: "dhs-font-abcBold dhs-leading-none dhs-pt-[2px]", children: "Dex" }),
              /* @__PURE__ */ r("span", { className: "dhs-font-abcLight dhs-leading-none dhs-pt-[2px]", children: "Hunter" })
            ] })
          ]
        }
      )
    ] }),
    h && /* @__PURE__ */ r(I, {})
  ] });
}, zt = L(R);
export {
  zt as default
};

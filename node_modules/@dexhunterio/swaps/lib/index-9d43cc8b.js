import a from "react";
var c = { exports: {} }, f = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var u = a;
function d(t, e) {
  return t === e && (t !== 0 || 1 / t === 1 / e) || t !== t && e !== e;
}
var p = typeof Object.is == "function" ? Object.is : d, v = u.useState, S = u.useEffect, l = u.useLayoutEffect, m = u.useDebugValue;
function y(t, e) {
  var r = e(), o = v({ inst: { value: r, getSnapshot: e } }), n = o[0].inst, i = o[1];
  return l(function() {
    n.value = r, n.getSnapshot = e, s(n) && i({ inst: n });
  }, [t, r, e]), S(function() {
    return s(n) && i({ inst: n }), t(function() {
      s(n) && i({ inst: n });
    });
  }, [t]), m(r), r;
}
function s(t) {
  var e = t.getSnapshot;
  t = t.value;
  try {
    var r = e();
    return !p(t, r);
  } catch {
    return !0;
  }
}
function x(t, e) {
  return e();
}
var h = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? x : y;
f.useSyncExternalStore = u.useSyncExternalStore !== void 0 ? u.useSyncExternalStore : h;
c.exports = f;
var w = c.exports;
export {
  w as s
};

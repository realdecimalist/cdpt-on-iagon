import * as t from "react";
const u = /* @__PURE__ */ t.createContext(void 0), i = /* @__PURE__ */ t.createContext(!1);
function C(e, n) {
  return e || (n && typeof window < "u" ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = u), window.ReactQueryClientContext) : u);
}
const a = ({
  context: e
} = {}) => {
  const n = t.useContext(C(e, t.useContext(i)));
  if (!n)
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  return n;
}, f = ({
  client: e,
  children: n,
  context: r,
  contextSharing: o = !1
}) => {
  t.useEffect(() => (e.mount(), () => {
    e.unmount();
  }), [e]);
  const s = C(r, o);
  return /* @__PURE__ */ t.createElement(i.Provider, {
    value: !r && o
  }, /* @__PURE__ */ t.createElement(s.Provider, {
    value: e
  }, n));
};
export {
  f as Q,
  a as u
};

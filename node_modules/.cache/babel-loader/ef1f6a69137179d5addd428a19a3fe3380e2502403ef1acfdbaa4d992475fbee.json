{"ast":null,"code":"import { forwardRef as w, createElement as s } from \"react\";\nvar p = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\nconst g = e => e.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase(),\n  h = (e, n) => {\n    const o = w((_ref, d) => {\n      let {\n        color: c = \"currentColor\",\n        size: r = 24,\n        strokeWidth: a = 2,\n        absoluteStrokeWidth: i,\n        children: t,\n        ...u\n      } = _ref;\n      return s(\"svg\", {\n        ref: d,\n        ...p,\n        width: r,\n        height: r,\n        stroke: c,\n        strokeWidth: i ? Number(a) * 24 / Number(r) : a,\n        className: \"lucide lucide-\".concat(g(e)),\n        ...u\n      }, [...n.map(_ref2 => {\n        let [l, m] = _ref2;\n        return s(l, m);\n      }), ...((Array.isArray(t) ? t : [t]) || [])]);\n    });\n    return o.displayName = \"\".concat(e), o;\n  };\nvar f = h;\nexport { f as c };","map":{"version":3,"names":["forwardRef","w","createElement","s","p","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","g","e","replace","toLowerCase","h","n","o","_ref","d","color","c","size","r","a","absoluteStrokeWidth","i","children","t","u","ref","Number","className","concat","map","_ref2","l","m","Array","isArray","displayName","f"],"sources":["D:/fluxPoint/Development/cDPT/cdpt-on-iagon/node_modules/@dexhunterio/swaps/lib/createLucideIcon-7a477fa6.js"],"sourcesContent":["import { forwardRef as w, createElement as s } from \"react\";\nvar p = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\nconst g = (e) => e.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase(), h = (e, n) => {\n  const o = w(\n    ({ color: c = \"currentColor\", size: r = 24, strokeWidth: a = 2, absoluteStrokeWidth: i, children: t, ...u }, d) => s(\n      \"svg\",\n      {\n        ref: d,\n        ...p,\n        width: r,\n        height: r,\n        stroke: c,\n        strokeWidth: i ? Number(a) * 24 / Number(r) : a,\n        className: `lucide lucide-${g(e)}`,\n        ...u\n      },\n      [\n        ...n.map(([l, m]) => s(l, m)),\n        ...(Array.isArray(t) ? t : [t]) || []\n      ]\n    )\n  );\n  return o.displayName = `${e}`, o;\n};\nvar f = h;\nexport {\n  f as c\n};\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,CAAC,EAAEC,aAAa,IAAIC,CAAC,QAAQ,OAAO;AAC3D,IAAIC,CAAC,GAAG;EACNC,KAAK,EAAE,4BAA4B;EACnCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,WAAW;EACpBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,cAAc;EACtBC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE,OAAO;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD,MAAMC,CAAC,GAAIC,CAAC,IAAKA,CAAC,CAACC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;EAAEC,CAAC,GAAGA,CAACH,CAAC,EAAEI,CAAC,KAAK;IACrF,MAAMC,CAAC,GAAGnB,CAAC,CACT,CAAAoB,IAAA,EAA6GC,CAAC;MAAA,IAA7G;QAAEC,KAAK,EAAEC,CAAC,GAAG,cAAc;QAAEC,IAAI,EAAEC,CAAC,GAAG,EAAE;QAAEf,WAAW,EAAEgB,CAAC,GAAG,CAAC;QAAEC,mBAAmB,EAAEC,CAAC;QAAEC,QAAQ,EAAEC,CAAC;QAAE,GAAGC;MAAE,CAAC,GAAAX,IAAA;MAAA,OAAQlB,CAAC,CAClH,KAAK,EACL;QACE8B,GAAG,EAAEX,CAAC;QACN,GAAGlB,CAAC;QACJE,KAAK,EAAEoB,CAAC;QACRnB,MAAM,EAAEmB,CAAC;QACThB,MAAM,EAAEc,CAAC;QACTb,WAAW,EAAEkB,CAAC,GAAGK,MAAM,CAACP,CAAC,CAAC,GAAG,EAAE,GAAGO,MAAM,CAACR,CAAC,CAAC,GAAGC,CAAC;QAC/CQ,SAAS,mBAAAC,MAAA,CAAmBtB,CAAC,CAACC,CAAC,CAAC,CAAE;QAClC,GAAGiB;MACL,CAAC,EACD,CACE,GAAGb,CAAC,CAACkB,GAAG,CAACC,KAAA;QAAA,IAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAAF,KAAA;QAAA,OAAKnC,CAAC,CAACoC,CAAC,EAAEC,CAAC,CAAC;MAAA,EAAC,EAC7B,IAAG,CAACC,KAAK,CAACC,OAAO,CAACX,CAAC,CAAC,GAAGA,CAAC,GAAG,CAACA,CAAC,CAAC,KAAK,EAAE,EAEzC,CAAC;IAAA,CACH,CAAC;IACD,OAAOX,CAAC,CAACuB,WAAW,MAAAP,MAAA,CAAMrB,CAAC,CAAE,EAAEK,CAAC;EAClC,CAAC;AACD,IAAIwB,CAAC,GAAG1B,CAAC;AACT,SACE0B,CAAC,IAAIpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const i = e => e.charAt(0).toUpperCase() + e.slice(1),\n  n = e => {\n    if (!e) return null;\n    let s = e[0];\n    for (const r of e) parseInt(r.token1Amount) > parseInt(s.token1Amount) && (s = r);\n    return s;\n  },\n  t = e => {\n    if (!e) return null;\n    let s = e[0].pool;\n    for (const r of e) parseInt(r.pool.amount_1) > parseInt(s.amount_1) && (s = r.pool);\n    return s.dex_name;\n  },\n  f = e => e < 100 ? e / 100 * 5 : e < 500 ? 5 + e / 500 * 5 : e < 1e3 ? 10 + e / 1e3 * 5 : e < 2500 ? 15 + e / 2500 * 10 : e < 5e3 ? 25 + e / 5e3 * 15 : e < 1e4 ? 40 + e / 1e4 * 15 : e < 25e3 ? 55 + e / 25e3 * 15 : e < 5e4 ? 70 + e / 5e4 * 15 : 85 + e / 1e5 * 15,\n  p = (e, s) => [\"3m\", \"5m\", \"30m\", \"1h\"].includes(s) ? e <= 5 ? 20 : e <= 10 ? 20 + e / 40 * 20 : e <= 15 ? 40 + e / 60 * 20 : e <= 25 ? 60 + e / 80 * 20 : 80 + e / 50 * 20 : e <= 25 ? 20 : e <= 50 ? 20 + e / 100 * 20 : e <= 100 ? 40 + e / 150 * 20 : e <= 150 ? 60 + e / 200 * 20 : 80 + e / 250 * 20;\nfunction c(e) {\n  const s = e.match(/\\.(\\d{6,})/);\n  return s && s[1].length > 6 ? e.replace(/\\.(\\d{3})(\\d+)(\\d{4})$/, function () {\n    return \".\".concat(arguments.length <= 1 ? undefined : arguments[1], \"..\").concat(arguments.length <= 3 ? undefined : arguments[3]);\n  }) : e;\n}\nfunction u(e) {\n  return e ? e.length > 6 ? \"\".concat(e.slice(0, 2), \"..\").concat(e.slice(-2)) : e : \"\";\n}\nexport { i as capitalize, n as findHighestLiquidity, t as findHighestLiquidityChart, u as formatTokenName, c as formatTokenValue, p as getTradeAmountWidth, f as progressBarFill };","map":{"version":3,"names":["i","e","charAt","toUpperCase","slice","n","s","r","parseInt","token1Amount","t","pool","amount_1","dex_name","f","p","includes","c","match","length","replace","concat","arguments","undefined","u","capitalize","findHighestLiquidity","findHighestLiquidityChart","formatTokenName","formatTokenValue","getTradeAmountWidth","progressBarFill"],"sources":["D:/fluxPoint/Development/cDPT/cdpt-on-iagon/node_modules/@dexhunterio/swaps/lib/utils/formatToken.js"],"sourcesContent":["const i = (e) => e.charAt(0).toUpperCase() + e.slice(1), n = (e) => {\n  if (!e)\n    return null;\n  let s = e[0];\n  for (const r of e)\n    parseInt(r.token1Amount) > parseInt(s.token1Amount) && (s = r);\n  return s;\n}, t = (e) => {\n  if (!e)\n    return null;\n  let s = e[0].pool;\n  for (const r of e)\n    parseInt(r.pool.amount_1) > parseInt(s.amount_1) && (s = r.pool);\n  return s.dex_name;\n}, f = (e) => e < 100 ? e / 100 * 5 : e < 500 ? 5 + e / 500 * 5 : e < 1e3 ? 10 + e / 1e3 * 5 : e < 2500 ? 15 + e / 2500 * 10 : e < 5e3 ? 25 + e / 5e3 * 15 : e < 1e4 ? 40 + e / 1e4 * 15 : e < 25e3 ? 55 + e / 25e3 * 15 : e < 5e4 ? 70 + e / 5e4 * 15 : 85 + e / 1e5 * 15, p = (e, s) => [\"3m\", \"5m\", \"30m\", \"1h\"].includes(s) ? e <= 5 ? 20 : e <= 10 ? 20 + e / 40 * 20 : e <= 15 ? 40 + e / 60 * 20 : e <= 25 ? 60 + e / 80 * 20 : 80 + e / 50 * 20 : e <= 25 ? 20 : e <= 50 ? 20 + e / 100 * 20 : e <= 100 ? 40 + e / 150 * 20 : e <= 150 ? 60 + e / 200 * 20 : 80 + e / 250 * 20;\nfunction c(e) {\n  const s = e.match(/\\.(\\d{6,})/);\n  return s && s[1].length > 6 ? e.replace(/\\.(\\d{3})(\\d+)(\\d{4})$/, (...r) => `.${r[1]}..${r[3]}`) : e;\n}\nfunction u(e) {\n  return e ? e.length > 6 ? `${e.slice(0, 2)}..${e.slice(-2)}` : e : \"\";\n}\nexport {\n  i as capitalize,\n  n as findHighestLiquidity,\n  t as findHighestLiquidityChart,\n  u as formatTokenName,\n  c as formatTokenValue,\n  p as getTradeAmountWidth,\n  f as progressBarFill\n};\n"],"mappings":"AAAA,MAAMA,CAAC,GAAIC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;EAAEC,CAAC,GAAIJ,CAAC,IAAK;IAClE,IAAI,CAACA,CAAC,EACJ,OAAO,IAAI;IACb,IAAIK,CAAC,GAAGL,CAAC,CAAC,CAAC,CAAC;IACZ,KAAK,MAAMM,CAAC,IAAIN,CAAC,EACfO,QAAQ,CAACD,CAAC,CAACE,YAAY,CAAC,GAAGD,QAAQ,CAACF,CAAC,CAACG,YAAY,CAAC,KAAKH,CAAC,GAAGC,CAAC,CAAC;IAChE,OAAOD,CAAC;EACV,CAAC;EAAEI,CAAC,GAAIT,CAAC,IAAK;IACZ,IAAI,CAACA,CAAC,EACJ,OAAO,IAAI;IACb,IAAIK,CAAC,GAAGL,CAAC,CAAC,CAAC,CAAC,CAACU,IAAI;IACjB,KAAK,MAAMJ,CAAC,IAAIN,CAAC,EACfO,QAAQ,CAACD,CAAC,CAACI,IAAI,CAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAACF,CAAC,CAACM,QAAQ,CAAC,KAAKN,CAAC,GAAGC,CAAC,CAACI,IAAI,CAAC;IAClE,OAAOL,CAAC,CAACO,QAAQ;EACnB,CAAC;EAAEC,CAAC,GAAIb,CAAC,IAAKA,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGA,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGA,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE;EAAEc,CAAC,GAAGA,CAACd,CAAC,EAAEK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAACU,QAAQ,CAACV,CAAC,CAAC,GAAGL,CAAC,IAAI,CAAC,GAAG,EAAE,GAAGA,CAAC,IAAI,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,IAAI,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,IAAI,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,IAAI,EAAE,GAAG,EAAE,GAAGA,CAAC,IAAI,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,IAAI,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGA,CAAC,IAAI,GAAG,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE;AACtjB,SAASgB,CAACA,CAAChB,CAAC,EAAE;EACZ,MAAMK,CAAC,GAAGL,CAAC,CAACiB,KAAK,CAAC,YAAY,CAAC;EAC/B,OAAOZ,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAACa,MAAM,GAAG,CAAC,GAAGlB,CAAC,CAACmB,OAAO,CAAC,wBAAwB,EAAE;IAAA,WAAAC,MAAA,CAAAC,SAAA,CAAAH,MAAA,QAAAI,SAAA,GAAAD,SAAA,WAAAD,MAAA,CAAAC,SAAA,CAAAH,MAAA,QAAAI,SAAA,GAAAD,SAAA;EAAA,CAA6B,CAAC,GAAGrB,CAAC;AACtG;AACA,SAASuB,CAACA,CAACvB,CAAC,EAAE;EACZ,OAAOA,CAAC,GAAGA,CAAC,CAACkB,MAAM,GAAG,CAAC,MAAAE,MAAA,CAAMpB,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,QAAAiB,MAAA,CAAKpB,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAKH,CAAC,GAAG,EAAE;AACvE;AACA,SACED,CAAC,IAAIyB,UAAU,EACfpB,CAAC,IAAIqB,oBAAoB,EACzBhB,CAAC,IAAIiB,yBAAyB,EAC9BH,CAAC,IAAII,eAAe,EACpBX,CAAC,IAAIY,gBAAgB,EACrBd,CAAC,IAAIe,mBAAmB,EACxBhB,CAAC,IAAIiB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
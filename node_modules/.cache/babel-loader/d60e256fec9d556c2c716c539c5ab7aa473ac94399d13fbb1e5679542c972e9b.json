{"ast":null,"code":"import m from \"../../store/useStore.js\";\nimport { server as b } from \"../../config/axios.js\";\nimport { roundNumber as k, getBonusOutput as x } from \"../../utils/formatNumber.js\";\nimport { findHighestLiquidity as T } from \"../../utils/formatToken.js\";\nimport \"react\";\nimport \"../../_commonjsHelpers-10dfc225.js\";\nimport \"../../index-9d43cc8b.js\";\nimport \"../../store/createTokenSearchSlice.js\";\nimport \"../../immer-548168ec.js\";\nimport \"../../store/createWalletSlice.js\";\nimport \"../../store/createSwapSettingsSlice.js\";\nimport \"../../store/createGlobalSettingsSlice.js\";\nimport \"../../store/createUserOrdersSlice.js\";\nimport \"../../store/createSwapSlice.js\";\nimport \"../../store/createChartSlice.js\";\nimport \"../../store/createBasketSlice.js\";\nimport \"../components/tokens.js\";\nimport \"../../store/createModalWhatsNewSlice.js\";\nimport \"../../store/createSwapParamsSlice.js\";\nimport \"../../index-ca8eb9e1.js\";\nimport \"../../axios-ddd885c5.js\";\nimport \"../../config/decrypt.js\";\nconst st = () => {\n  const {\n      tokenSell: s,\n      tokenBuy: a,\n      sellAmount: n,\n      setIsTokenPriceLoading: B,\n      setSwapDetails: u,\n      setIsSwapDetailsLoading: d,\n      setEstimationError: i,\n      isTransactionLoading: h,\n      inputMode: p,\n      buyAmount: l,\n      dexBlacklist: A,\n      setBuyAmount: c,\n      setSellAmount: f,\n      setBonusOutput: _,\n      limitPrice: N,\n      limitMultiples: P\n    } = m(e => e.swapSlice),\n    {\n      defaultBuySize: I\n    } = m(e => e.globalSettingsSlice),\n    {\n      poolInfo: O\n    } = m(e => e.chartSlice);\n  return {\n    estimateLimit: async _ref => {\n      let {\n        signal: e,\n        newTokenSell: $,\n        newTokenBuy: q\n      } = _ref;\n      var L, S, g, w, E, F;\n      if (h) return !0;\n      B(!0), d(!0);\n      const r = T(O),\n        y = {\n          token_in: (L = $ || s) == null ? void 0 : L.token_id,\n          token_out: (S = q || a) == null ? void 0 : S.token_id,\n          blacklisted_dexes: A,\n          wanted_price: parseFloat(N),\n          multiples: P || 1,\n          to_split: !(r != null && r.dexName),\n          dex: r == null ? void 0 : r.dexName\n        };\n      try {\n        if (p === \"SELL\" && n && parseFloat(n) > 0) {\n          const t = {\n              amount_in: parseFloat(n || I),\n              ...y\n            },\n            {\n              data: o\n            } = await b.post(\"/swap/limit/estimate\", t, {\n              signal: e\n            });\n          return delete o.total_input, u(o), i(\"\"), c(k(o.total_output)), _(\"+\".concat(x(o.possible_routes), \" \").concat(a == null ? void 0 : a.ticker)), !0;\n        }\n        if (p === \"BUY\" && l && parseFloat(l) > 0) {\n          const t = {\n              amount_out: parseFloat(l),\n              ...y\n            },\n            {\n              data: o\n            } = await b.post(\"/swap/reverseEstimate\", t, {\n              signal: e\n            });\n          return delete o.total_output, u(o), i(\"\"), f(k(o.total_input)), _(\"+\".concat(x(o.possible_routes), \" \").concat(s == null ? void 0 : s.ticker)), !0;\n        }\n        parseFloat(n) === 0 && p === \"SELL\" && (u(null), c(0)), parseFloat(l) === 0 && p === \"BUY\" && (u(null), f(0)), i(\"\");\n      } catch (t) {\n        if (console.log(t), t.name === \"AbortError\") return !0;\n        ((g = t.response) == null ? void 0 : g.data) === \"pool_out_of_sync\" && i(\"Pools Out Of Sync\"), ((w = t.response) == null ? void 0 : w.data) === \"not_enough_liquidity\" && i(\"Not Enough Liquidity\"), ((E = t.response) == null ? void 0 : E.data) === \"pool_not_found\" && i(\"Pool Not Found\"), ((F = t.response) == null ? void 0 : F.data) === \"input_too_small\" && i(\"Input Too Small\");\n      } finally {\n        d(!1);\n      }\n      return !0;\n    }\n  };\n};\nexport { st as useEstimateLimit };","map":{"version":3,"names":["m","server","b","roundNumber","k","getBonusOutput","x","findHighestLiquidity","T","st","tokenSell","s","tokenBuy","a","sellAmount","n","setIsTokenPriceLoading","B","setSwapDetails","u","setIsSwapDetailsLoading","d","setEstimationError","i","isTransactionLoading","h","inputMode","p","buyAmount","l","dexBlacklist","A","setBuyAmount","c","setSellAmount","f","setBonusOutput","_","limitPrice","N","limitMultiples","P","e","swapSlice","defaultBuySize","I","globalSettingsSlice","poolInfo","O","chartSlice","estimateLimit","_ref","signal","newTokenSell","$","newTokenBuy","q","L","S","g","w","E","F","r","y","token_in","token_id","token_out","blacklisted_dexes","wanted_price","parseFloat","multiples","to_split","dexName","dex","t","amount_in","data","o","post","total_input","total_output","concat","possible_routes","ticker","amount_out","console","log","name","response","useEstimateLimit"],"sources":["D:/fluxPoint/Development/cDPT/cdpt-on-iagon/node_modules/@dexhunterio/swaps/lib/swap/hooks/useLimitEstimation.js"],"sourcesContent":["import m from \"../../store/useStore.js\";\nimport { server as b } from \"../../config/axios.js\";\nimport { roundNumber as k, getBonusOutput as x } from \"../../utils/formatNumber.js\";\nimport { findHighestLiquidity as T } from \"../../utils/formatToken.js\";\nimport \"react\";\nimport \"../../_commonjsHelpers-10dfc225.js\";\nimport \"../../index-9d43cc8b.js\";\nimport \"../../store/createTokenSearchSlice.js\";\nimport \"../../immer-548168ec.js\";\nimport \"../../store/createWalletSlice.js\";\nimport \"../../store/createSwapSettingsSlice.js\";\nimport \"../../store/createGlobalSettingsSlice.js\";\nimport \"../../store/createUserOrdersSlice.js\";\nimport \"../../store/createSwapSlice.js\";\nimport \"../../store/createChartSlice.js\";\nimport \"../../store/createBasketSlice.js\";\nimport \"../components/tokens.js\";\nimport \"../../store/createModalWhatsNewSlice.js\";\nimport \"../../store/createSwapParamsSlice.js\";\nimport \"../../index-ca8eb9e1.js\";\nimport \"../../axios-ddd885c5.js\";\nimport \"../../config/decrypt.js\";\nconst st = () => {\n  const {\n    tokenSell: s,\n    tokenBuy: a,\n    sellAmount: n,\n    setIsTokenPriceLoading: B,\n    setSwapDetails: u,\n    setIsSwapDetailsLoading: d,\n    setEstimationError: i,\n    isTransactionLoading: h,\n    inputMode: p,\n    buyAmount: l,\n    dexBlacklist: A,\n    setBuyAmount: c,\n    setSellAmount: f,\n    setBonusOutput: _,\n    limitPrice: N,\n    limitMultiples: P\n  } = m((e) => e.swapSlice), { defaultBuySize: I } = m((e) => e.globalSettingsSlice), { poolInfo: O } = m((e) => e.chartSlice);\n  return { estimateLimit: async ({ signal: e, newTokenSell: $, newTokenBuy: q }) => {\n    var L, S, g, w, E, F;\n    if (h)\n      return !0;\n    B(!0), d(!0);\n    const r = T(O), y = {\n      token_in: (L = $ || s) == null ? void 0 : L.token_id,\n      token_out: (S = q || a) == null ? void 0 : S.token_id,\n      blacklisted_dexes: A,\n      wanted_price: parseFloat(N),\n      multiples: P || 1,\n      to_split: !(r != null && r.dexName),\n      dex: r == null ? void 0 : r.dexName\n    };\n    try {\n      if (p === \"SELL\" && n && parseFloat(n) > 0) {\n        const t = {\n          amount_in: parseFloat(n || I),\n          ...y\n        }, { data: o } = await b.post(\"/swap/limit/estimate\", t, {\n          signal: e\n        });\n        return delete o.total_input, u(o), i(\"\"), c(k(o.total_output)), _(`+${x(o.possible_routes)} ${a == null ? void 0 : a.ticker}`), !0;\n      }\n      if (p === \"BUY\" && l && parseFloat(l) > 0) {\n        const t = {\n          amount_out: parseFloat(l),\n          ...y\n        }, { data: o } = await b.post(\"/swap/reverseEstimate\", t, {\n          signal: e\n        });\n        return delete o.total_output, u(o), i(\"\"), f(k(o.total_input)), _(`+${x(o.possible_routes)} ${s == null ? void 0 : s.ticker}`), !0;\n      }\n      parseFloat(n) === 0 && p === \"SELL\" && (u(null), c(0)), parseFloat(l) === 0 && p === \"BUY\" && (u(null), f(0)), i(\"\");\n    } catch (t) {\n      if (console.log(t), t.name === \"AbortError\")\n        return !0;\n      ((g = t.response) == null ? void 0 : g.data) === \"pool_out_of_sync\" && i(\"Pools Out Of Sync\"), ((w = t.response) == null ? void 0 : w.data) === \"not_enough_liquidity\" && i(\"Not Enough Liquidity\"), ((E = t.response) == null ? void 0 : E.data) === \"pool_not_found\" && i(\"Pool Not Found\"), ((F = t.response) == null ? void 0 : F.data) === \"input_too_small\" && i(\"Input Too Small\");\n    } finally {\n      d(!1);\n    }\n    return !0;\n  } };\n};\nexport {\n  st as useEstimateLimit\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
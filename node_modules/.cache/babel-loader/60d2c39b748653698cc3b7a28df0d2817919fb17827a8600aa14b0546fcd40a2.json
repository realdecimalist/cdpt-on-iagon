{"ast":null,"code":"import { parseAddressesToBech32 as S, getBalance as W } from \"../utils/cardanoUtils.js\";\nimport A from \"../store/useStore.js\";\nimport \"../index-ca8eb9e1.js\";\nimport \"../config/axios.js\";\nimport \"../axios-ddd885c5.js\";\nimport \"../config/decrypt.js\";\nimport \"react\";\nimport \"../_commonjsHelpers-10dfc225.js\";\nimport \"../index-9d43cc8b.js\";\nimport \"../store/createTokenSearchSlice.js\";\nimport \"../immer-548168ec.js\";\nimport \"../store/createWalletSlice.js\";\nimport \"../store/createSwapSettingsSlice.js\";\nimport \"../store/createGlobalSettingsSlice.js\";\nimport \"../store/createUserOrdersSlice.js\";\nimport \"../store/createSwapSlice.js\";\nimport \"../store/createChartSlice.js\";\nimport \"../store/createBasketSlice.js\";\nimport \"../swap/components/tokens.js\";\nimport \"../store/createModalWhatsNewSlice.js\";\nimport \"../store/createSwapParamsSlice.js\";\nconst F = r => {\n  const {\n    setIsLoadingWallet: a,\n    updateSelectedWallet: n,\n    resetWallet: d,\n    setOnWalletConnect: m,\n    onWalletConnect: p\n  } = A(e => e.walletSlice);\n  r !== void 0 && m(r);\n  const s = r !== void 0 ? r : p,\n    c = async e => {\n      try {\n        a(!0);\n        const t = await window.cardano[e].enable();\n        let o;\n        try {\n          o = await t.getUsedAddresses(), e === \"eternl\" && (o = [await t.getChangeAddress(), ...o].filter((l, g, u) => u.indexOf(l) === g));\n        } catch (l) {\n          console.log(\"ERROR GETTING ADDRESSES\", l), o = await t.getUsedAddresses();\n        }\n        const i = S(o),\n          {\n            balance: f\n          } = await W(i);\n        n({\n          api: t,\n          balance: f,\n          selectedWallet: e,\n          userAddress: i[0],\n          addressList: i\n        }), localStorage.setItem(\"dexhunter-selected-wallet\", e), s !== void 0 && s(e);\n      } catch (t) {\n        console.error(t), d();\n      } finally {\n        a(!1);\n      }\n    };\n  return {\n    connectWallet: c,\n    reconnectToWallet: async function () {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      console.log(\"RECONNECTING TO WALLET\", e);\n      const t = e || localStorage.getItem(\"dexhunter-selected-wallet\");\n      if (t) return c(t);\n      a(!1), s !== void 0 && s(t);\n    }\n  };\n};\nexport { F as useWalletConnect };","map":{"version":3,"names":["parseAddressesToBech32","S","getBalance","W","A","F","r","setIsLoadingWallet","a","updateSelectedWallet","n","resetWallet","d","setOnWalletConnect","m","onWalletConnect","p","e","walletSlice","s","c","t","window","cardano","enable","o","getUsedAddresses","getChangeAddress","filter","l","g","u","indexOf","console","log","i","balance","f","api","selectedWallet","userAddress","addressList","localStorage","setItem","error","connectWallet","reconnectToWallet","arguments","length","undefined","getItem","useWalletConnect"],"sources":["D:/fluxPoint/Development/cDPT/cdpt-on-iagon/node_modules/@dexhunterio/swaps/lib/hooks/useWalletConnect.js"],"sourcesContent":["import { parseAddressesToBech32 as S, getBalance as W } from \"../utils/cardanoUtils.js\";\nimport A from \"../store/useStore.js\";\nimport \"../index-ca8eb9e1.js\";\nimport \"../config/axios.js\";\nimport \"../axios-ddd885c5.js\";\nimport \"../config/decrypt.js\";\nimport \"react\";\nimport \"../_commonjsHelpers-10dfc225.js\";\nimport \"../index-9d43cc8b.js\";\nimport \"../store/createTokenSearchSlice.js\";\nimport \"../immer-548168ec.js\";\nimport \"../store/createWalletSlice.js\";\nimport \"../store/createSwapSettingsSlice.js\";\nimport \"../store/createGlobalSettingsSlice.js\";\nimport \"../store/createUserOrdersSlice.js\";\nimport \"../store/createSwapSlice.js\";\nimport \"../store/createChartSlice.js\";\nimport \"../store/createBasketSlice.js\";\nimport \"../swap/components/tokens.js\";\nimport \"../store/createModalWhatsNewSlice.js\";\nimport \"../store/createSwapParamsSlice.js\";\nconst F = (r) => {\n  const {\n    setIsLoadingWallet: a,\n    updateSelectedWallet: n,\n    resetWallet: d,\n    setOnWalletConnect: m,\n    onWalletConnect: p\n  } = A((e) => e.walletSlice);\n  r !== void 0 && m(r);\n  const s = r !== void 0 ? r : p, c = async (e) => {\n    try {\n      a(!0);\n      const t = await window.cardano[e].enable();\n      let o;\n      try {\n        o = await t.getUsedAddresses(), e === \"eternl\" && (o = [await t.getChangeAddress(), ...o].filter((l, g, u) => u.indexOf(l) === g));\n      } catch (l) {\n        console.log(\"ERROR GETTING ADDRESSES\", l), o = await t.getUsedAddresses();\n      }\n      const i = S(o), { balance: f } = await W(i);\n      n({ api: t, balance: f, selectedWallet: e, userAddress: i[0], addressList: i }), localStorage.setItem(\"dexhunter-selected-wallet\", e), s !== void 0 && s(e);\n    } catch (t) {\n      console.error(t), d();\n    } finally {\n      a(!1);\n    }\n  };\n  return { connectWallet: c, reconnectToWallet: async (e = \"\") => {\n    console.log(\"RECONNECTING TO WALLET\", e);\n    const t = e || localStorage.getItem(\"dexhunter-selected-wallet\");\n    if (t)\n      return c(t);\n    a(!1), s !== void 0 && s(t);\n  } };\n};\nexport {\n  F as useWalletConnect\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}